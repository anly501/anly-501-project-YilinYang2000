setwd("~/Desktop/anly-501-project-YilinYang2000-1")
#Load the dataset
x_train = read.csv("data/00-raw-data/pytweettrain.csv")
#Load the dataset
x_train = read.csv("data/00-raw-data/pytweettrain.csv")
x_test = read.csv("data/00-raw-data/pytweettest.csv")
y_train = read.csv("data/00-raw-data/pyresulttrain.csv")
y_test = read.csv("data/00-raw-data/pyresulttest.csv")
x_trsain
x_train
y_train
#Load the dataset
x_train = read.csv("data/00-raw-data/pytweettrain.csv")
x_test = read.csv("data/00-raw-data/pytweettest.csv")
y_train = read.csv("data/00-raw-data/pyresulttrain.csv")
y_test = read.csv("data/00-raw-data/pyresulttest.csv")
x_train = x_train$text
x_test = x_test$text
y_train = y_train$result
y_test = y_test$result
library(e1071)
install.packages("e1071")
library(e1071)
library(e1071)
data_classifier <- naiveBayes(x_train,x_test)
library(e1071)
data_classifier <- naiveBayes(x_train,y_train)
data_classifier
library(gmodels)
install.packages("gmodels")
library(gmodels)
data_test_pred <- predict(data_classifier, x_test)
library(gmodels)
data_test_pred <- predict(data_classifier, x_test)
CrossTable(data_test_pred, y_test,
prop.chisq = FALSE, prop.t = FALSE,
dnn = c('predicted', 'actual'))
library(gmodels)
data_test_pred <- predict(data_classifier, x_test)
CrossTable(data_test_pred, x_test,
prop.chisq = FALSE, prop.t = FALSE,
dnn = c('predicted', 'actual'))
library(gmodels)
data_test_pred <- predict(data_classifier, x_test)
CrossTable(data_test_pred, y_test,
prop.chisq = FALSE, prop.t = FALSE,
dnn = c('predicted', 'actual'))
mat <- confusionmatrix(data_test_pred,y_test)
library(caret)
install.packages("caret")
library(caret)
mat <- confusionmatrix(data_test_pred,y_test)
library(caret)
mat <- confusionMatrix(data_test_pred,y_test)
data_test_pred
y
y_test
#Load the dataset
x_train = read.csv("data/00-raw-data/pytweettrain.csv")
x_test = read.csv("data/00-raw-data/pytweettest.csv")
y_train = read.csv("data/00-raw-data/pyresulttrain.csv")
y_test = read.csv("data/00-raw-data/pyresulttest.csv")
x_train = x_train$text
x_test = x_test$text
y_train = as.factors(y_train$result)
#Load the dataset
x_train = read.csv("data/00-raw-data/pytweettrain.csv")
x_test = read.csv("data/00-raw-data/pytweettest.csv")
y_train = read.csv("data/00-raw-data/pyresulttrain.csv")
y_test = read.csv("data/00-raw-data/pyresulttest.csv")
x_train = x_train$text
x_test = x_test$text
y_train = as.factors(y_train$result)
#Load the dataset
x_train = read.csv("data/00-raw-data/pytweettrain.csv")
x_test = read.csv("data/00-raw-data/pytweettest.csv")
y_train = read.csv("data/00-raw-data/pyresulttrain.csv")
y_test = read.csv("data/00-raw-data/pyresulttest.csv")
x_train = x_train$text
x_test = x_test$text
y_train = factor(y_train$result)
y_test = factor(y_test$result)
library(e1071)
data_classifier <- naiveBayes(x_train,y_train)
library(gmodels)
data_test_pred <- predict(data_classifier, x_test)
CrossTable(data_test_pred, y_test,
prop.chisq = FALSE, prop.t = FALSE,
dnn = c('predicted', 'actual'))
library(caret)
mat <- confusionMatrix(data_test_pred,y_test)
library(caret)
mat <- confusionMatrix(data_test_pred,y_test)
mat
library(caret)
mat <- confusionMatrix(data_test_pred,y_test)
fourfoldplot(mat$table, color = c("cyan", "pink"),
conf.level = 0, margin = 1, main = "Confusion Matrix")
library(caret)
mat <- confusionMatrix(data_test_pred,y_test)
fourfoldplot(mat$table, color = c("cyan", "pink"),main = "Confusion Matrix")
library(caret)
mat <- confusionMatrix(data_test_pred,y_test)
fourfoldplot(mat$table, color = c("cyan"),main = "Confusion Matrix")
library(caret)
mat <- confusionMatrix(data_test_pred,y_test)
fourfoldplot(mat$table)
library(caret)
mat <- confusionMatrix(data_test_pred,y_test)
mat$table
library(caret)
mat <- confusionMatrix(data_test_pred,y_test)
autoplot(mat, type = "heatmap") +
scale_fill_gradient(low = "pink", high = "cyan")
library(caret)
library(ggplot2)
mat <- confusionMatrix(data_test_pred,y_test)
autoplot(mat, type = "heatmap") +
scale_fill_gradient(low = "pink", high = "cyan")
library(caret)
library(yardstick)
install.packages("yardstick")
library(caret)
library(yardstick)
library(ggplot2)
mat <- conf_mat(data_test_pred,y_test)
library(caret)
library(ggplot2)
mat <- confusionMatrix(data_test_pred,y_test)
ggplot(mat, aes(x=x, y=y, fill=value)) + geom_tile()
library(caret)
library(ggplot2)
mat <- confusionMatrix(data_test_pred,y_test)
ggplot(mat$table, aes(x=x, y=y, fill=value)) + geom_tile()
library(caret)
library(ggplot2)
mat <- confusionMatrix(data_test_pred,y_test)
mat <- data.frame(mat)
library(caret)
library(ggplot2)
mat <- confusionMatrix(data_test_pred,y_test)
mat$table
mat$byClass
library(caret)
library(ggplot2)
mat <- confusionMatrix(data_test_pred,y_test)
#Distribution of c.d.f. of Exponential with parameter 0.5
x1 = rexp(200,1)
X1=(1-exp(-(1*x1)))
table1 = data.frame(table(X1))
p = table1$Freq/sum(table1$Freq)
plot(X1,p,main="Distribution of c.d.f. of Exponential with parameter 1")
plot(pexp(sort(x1)),type="l",ylab="probability",main = "standard normal distribution")
#"Distribution of c.d.f of standard normal
x2 = rnorm(200)
X2 = pnorm(x2)
table2 = data.frame(table(X2))
p = table2$Freq/sum(table2$Freq)
plot(X2,p,main="Distribution of c.d.f of standard normal")
plot(pnorm(sort(x2)),type="l",ylab="probability",main = "standard normal distribution")
